{
	"info": {
		"_postman_id": "5f88f32c-e0c8-4bf6-8ebb-918ea3fa9d1d",
		"name": "LibroLead API - Integrated Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18971323",
		"_collection_link": "https://interstellar-shuttle-401487.postman.co/workspace/LibroLead~b241a89b-328d-4c8b-9d34-0b55162668ab/collection/18971323-5f88f32c-e0c8-4bf6-8ebb-918ea3fa9d1d?action=share&creator=18971323&source=collection_link"
	},
	"item": [
		{
			"name": "Create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success user creation\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"userId\", jsonData.message[20]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Mateus Costa\",\r\n    \"age\": 22,\r\n    \"email\": \"mateusfsn@ufmg.br\",\r\n    \"gender\": \"MALE\",\r\n    \"username\": \"mateus\",\r\n    \"password\": \"123456\",\r\n    \"birthDate\": \"01/01/2000\",\r\n    \"role\": \"USER\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Authenticate user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success user authenticated\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"jwtToken\", jsonData.jwtToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"mateus\",\r\n    \"password\": \"123456\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/users/authenticate",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success user updated\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Mateus Admin\",\r\n    \"age\": 22,\r\n    \"email\": \"mateusfsn@ufmg.br\",\r\n    \"gender\": \"MALE\",\r\n    \"username\": \"mateus\",\r\n    \"password\": \"123456\",\r\n    \"birthDate\": \"01/01/2000\",\r\n    \"role\": \"ADMIN\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/users/{{userId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create authors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success author creation\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"authorId\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Mateus Costa\",\r\n    \"age\": 22\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/authors",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"authors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find author by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success author found\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/authors/{{authorId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"authors",
						"{{authorId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "List authors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returned all registered authors\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/authors",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"authors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create publisher",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success publisher creation\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"publisherId\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Costa editora\",\r\n    \"code\": \"COST4321\",\r\n    \"foundationDate\": \"18/10/1963\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/publishers",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"publishers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find publisher by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success publisher found\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/publishers/{{publisherId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"publishers",
						"{{publisherId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "List publishers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Return all registered publishers\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/publishers",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"publishers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success book creation\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"bookId\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Introduction to Algorithms\",\r\n  \"isbn\": \"978-0-26-203384-8\",\r\n  \"publisherId\": {{publisherId}},\r\n  \"authorId\": {{authorId}},\r\n  \"pages\": 1292,\r\n  \"chapters\": 37\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/books",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find book by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success book found\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/books/{{bookId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"books",
						"{{bookId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "List books by user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Book list found by authenticated user informed\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/books",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update book by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Book by user successfully updated\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Introduction to Suffering\",\r\n  \"isbn\": \"978-0-26-203384-8\",\r\n  \"publisherId\": {{publisherId}},\r\n  \"authorId\": {{authorId}},\r\n  \"pages\": 123,\r\n  \"chapters\": 10\r\n}"
				},
				"url": {
					"raw": "{{url}}/api/v1/books/{{bookId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"books",
						"{{bookId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete book by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success book deleted\", () => {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/books/{{bookId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"books",
						"{{bookId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete author by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success author deleted\", () => {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/authors/{{authorId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"authors",
						"{{authorId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete publisher by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success publisher deleted\", () => {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/publishers/{{publisherId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"publishers",
						"{{publisherId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success user deleted\", () => {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/users/{{userId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "",
			"type": "string"
		}
	]
}